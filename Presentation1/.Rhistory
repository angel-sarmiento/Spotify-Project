filter(!grepl('Skit', track_name)) %>%
str_remove(string = track_name, pattern = fixed("Album Version (Edited)")) %>%
group_by(track_name) %>%
summarise_if(is.numeric, mean, na.rm = TRUE) %>%
ungroup() %>%
top_n(20, -valence) %>%
column_to_rownames("track_name") %>%
as.data.frame()
library(spotifyr)
Sys.setenv(SPOTIFY_CLIENT_ID = '42131626e81e4eaa99bcb59b9ec25ced')
Sys.setenv(SPOTIFY_CLIENT_SECRET = 'c4413145290a4e74b657e6691eb7ea3b')
access_token <- get_spotify_authorization_code()
kanye <- kanye %>% select_if(is.numeric) %>%
bind_cols(kanye %>% select(track_name)) %>%
filter(!grepl('Skit', track_name)) %>%
str_remove(track_name, pattern = fixed("Album Version (Edited)")) %>%
group_by(track_name) %>%
summarise_if(is.numeric, mean, na.rm = TRUE) %>%
ungroup() %>%
top_n(20, -valence) %>%
column_to_rownames("track_name") %>%
as.data.frame()
library(spotifyr)
Sys.setenv(SPOTIFY_CLIENT_ID = '42131626e81e4eaa99bcb59b9ec25ced')
Sys.setenv(SPOTIFY_CLIENT_SECRET = 'c4413145290a4e74b657e6691eb7ea3b')
access_token <- get_spotify_authorization_code()
kanye <- kanye %>% select_if(is.numeric) %>%
bind_cols(kanye %>% select(track_name)) %>%
filter(!grepl('Skit', track_name)) %>%
str_remove(pattern = fixed("Album Version (Edited)")) %>%
group_by(track_name) %>%
summarise_if(is.numeric, mean, na.rm = TRUE) %>%
ungroup() %>%
top_n(20, -valence) %>%
column_to_rownames("track_name") %>%
as.data.frame()
library(spotifyr)
Sys.setenv(SPOTIFY_CLIENT_ID = '42131626e81e4eaa99bcb59b9ec25ced')
Sys.setenv(SPOTIFY_CLIENT_SECRET = 'c4413145290a4e74b657e6691eb7ea3b')
access_token <- get_spotify_authorization_code()
kanye <- kanye %>% select_if(is.numeric) %>%
bind_cols(kanye %>% select(track_name)) %>%
filter(!grepl('Skit', track_name)) %>%
gsub("[Album Version (Edited)]", "") %>%
group_by(track_name) %>%
summarise_if(is.numeric, mean, na.rm = TRUE) %>%
ungroup() %>%
top_n(20, -valence) %>%
column_to_rownames("track_name") %>%
as.data.frame()
?hclust
library(spotifyr)
Sys.setenv(SPOTIFY_CLIENT_ID = '42131626e81e4eaa99bcb59b9ec25ced')
Sys.setenv(SPOTIFY_CLIENT_SECRET = 'c4413145290a4e74b657e6691eb7ea3b')
access_token <- get_spotify_authorization_code()
kanye <- kanye %>% select_if(is.numeric) %>%
bind_cols(kanye %>% select(track_name)) %>%
filter(!grepl('Skit', track_name)) %>%
filter(!grepl('Album Version', track_name)) %>%
group_by(track_name) %>%
summarise_if(is.numeric, mean, na.rm = TRUE) %>%
ungroup() %>%
top_n(20, -valence) %>%
column_to_rownames("track_name") %>%
as.data.frame()
library(spotifyr)
Sys.setenv(SPOTIFY_CLIENT_ID = '42131626e81e4eaa99bcb59b9ec25ced')
Sys.setenv(SPOTIFY_CLIENT_SECRET = 'c4413145290a4e74b657e6691eb7ea3b')
access_token <- get_spotify_authorization_code()
#creating the dendrogram
top_dend <- as.dendrogram(hclust(dist(kanye))) %>%
color_branches(k = 8) %>%
color_labels(k = 8)
circlize_dendrogram(top_dend, labels_track_height = 0.3, dend_track_height = 0.3)
library(spotifyr)
Sys.setenv(SPOTIFY_CLIENT_ID = '42131626e81e4eaa99bcb59b9ec25ced')
Sys.setenv(SPOTIFY_CLIENT_SECRET = 'c4413145290a4e74b657e6691eb7ea3b')
access_token <- get_spotify_authorization_code()
kanye <- kanye %>% select_if(is.numeric) %>%
bind_cols(kanye %>% select(track_name)) %>%
filter(!grepl('Skit', 'Live at' track_name)) %>%
kanye <- get_artist_audio_features('Kanye West')
kanye <- kanye %>% select_if(is.numeric) %>%
bind_cols(kanye %>% select(track_name)) %>%
filter(!grepl('Skit', 'Live at' track_name)) %>%
library(spotifyr)
Sys.setenv(SPOTIFY_CLIENT_ID = '42131626e81e4eaa99bcb59b9ec25ced')
Sys.setenv(SPOTIFY_CLIENT_SECRET = 'c4413145290a4e74b657e6691eb7ea3b')
access_token <- get_spotify_authorization_code()
kanye <- kanye %>% select_if(is.numeric) %>%
bind_cols(kanye %>% select(track_name)) %>%
filter(!grepl('Skit', 'Live at', track_name)) %>%
filter(!grepl('Album Version', track_name)) %>%
group_by(track_name) %>%
summarise_if(is.numeric, mean, na.rm = TRUE) %>%
ungroup() %>%
top_n(20, -valence) %>%
column_to_rownames("track_name") %>%
as.data.frame()
#creating the dendrogram
top_dend <- as.dendrogram(hclust(dist(kanye))) %>%
color_branches(k = 8) %>%
color_labels(k = 8)
circlize_dendrogram(top_dend, labels_track_height = 0.3, dend_track_height = 0.3)
kanye <- kanye %>% select_if(is.numeric) %>%
bind_cols(kanye %>% select(track_name)) %>%
filter(!grepl('Skit', track_name)) %>%
filter(!grepl('Album Version', track_name)) %>%
group_by(track_name) %>%
summarise_if(is.numeric, mean, na.rm = TRUE) %>%
ungroup() %>%
top_n(20, -valence) %>%
column_to_rownames("track_name") %>%
as.data.frame()
kanye <- get_artist_audio_features('Kanye West')
kanye <- kanye %>% select_if(is.numeric) %>%
bind_cols(kanye %>% select(track_name)) %>%
filter(!grepl('Skit', track_name)) %>%
filter(!grepl('Album Version', track_name)) %>%
group_by(track_name) %>%
summarise_if(is.numeric, mean, na.rm = TRUE) %>%
ungroup() %>%
top_n(20, -valence) %>%
column_to_rownames("track_name") %>%
as.data.frame()
#creating the dendrogram
top_dend <- as.dendrogram(hclust(dist(kanye))) %>%
color_branches(k = 8) %>%
color_labels(k = 8)
circlize_dendrogram(top_dend, labels_track_height = 0.3, dend_track_height = 0.3)
# library(lubridate)
#
# get_my_top_artists_or_tracks(type = 'artists', time_range = 'long_term', limit = 5) %>%
#     select(name, genres) %>%
#     rowwise %>%
#     mutate(genres = paste(genres, collapse = ', ')) %>%
#     ungroup %>%
#     kable()
# Retrieving data from Spotify
# Top 50 Charts of all European countries were added to the user profile before
# the function loads all songs from the playlist
ustop100 <- get_user_playlists('bilboard top 100 US') %>%
get_playlist_tracks()
library(spotifyr)
Sys.setenv(SPOTIFY_CLIENT_ID = '42131626e81e4eaa99bcb59b9ec25ced')
Sys.setenv(SPOTIFY_CLIENT_SECRET = 'c4413145290a4e74b657e6691eb7ea3b')
access_token <- get_spotify_authorization_code()
kanye <- get_artist_audio_features('Kanye West')
kanye <- kanye %>% select_if(is.numeric) %>%
bind_cols(kanye %>% select(track_name)) %>%
filter(!grepl('Skit', track_name)) %>%
filter(!grepl('Album Version', track_name)) %>%
group_by(track_name) %>%
summarise_if(is.numeric, mean, na.rm = TRUE) %>%
ungroup() %>%
top_n(25, -valence) %>%
column_to_rownames("track_name") %>%
as.data.frame()
#creating the dendrogram
top_dend <- as.dendrogram(hclust(dist(kanye))) %>%
color_branches(k = 8) %>%
color_labels(k = 8)
circlize_dendrogram(top_dend, labels_track_height = 0.3, dend_track_height = 0.3)
library(spotifyr)
Sys.setenv(SPOTIFY_CLIENT_ID = '42131626e81e4eaa99bcb59b9ec25ced')
Sys.setenv(SPOTIFY_CLIENT_SECRET = 'c4413145290a4e74b657e6691eb7ea3b')
access_token <- get_spotify_authorization_code()
kanye <- kanye %>% select_if(is.numeric) %>%
bind_cols(kanye %>% select(track_name)) %>%
filter(!grepl('Skit', track_name)) %>%
filter(!grepl('Album Version', track_name)) %>%
filter(!grepl('Live at', track_name)) %>%
group_by(track_name) %>%
summarise_if(is.numeric, mean, na.rm = TRUE) %>%
ungroup() %>%
top_n(25, -valence) %>%
column_to_rownames("track_name") %>%
as.data.frame()
kanye <- get_artist_audio_features('Kanye West')
kanye <- get_artist_audio_features('Kanye West')
kanye <- kanye %>% select_if(is.numeric) %>%
bind_cols(kanye %>% select(track_name)) %>%
filter(!grepl('Skit', track_name)) %>%
filter(!grepl('Album Version', track_name)) %>%
filter(!grepl('Live at', track_name)) %>%
group_by(track_name) %>%
summarise_if(is.numeric, mean, na.rm = TRUE) %>%
ungroup() %>%
top_n(25, -valence) %>%
column_to_rownames("track_name") %>%
as.data.frame()
#creating the dendrogram
top_dend <- as.dendrogram(hclust(dist(kanye))) %>%
color_branches(k = 8) %>%
color_labels(k = 8)
circlize_dendrogram(top_dend, labels_track_height = 0.3, dend_track_height = 0.3)
kanye <- get_artist_audio_features('Kanye West')
kanye <- kanye %>% select_if(is.numeric) %>%
bind_cols(kanye %>% select(track_name)) %>%
filter(!grepl('Skit', track_name)) %>%
filter(!grepl('Album Version', track_name)) %>%
filter(!grepl('[Live at]', track_name)) %>%
group_by(track_name) %>%
summarise_if(is.numeric, mean, na.rm = TRUE) %>%
ungroup() %>%
top_n(25, -valence) %>%
column_to_rownames("track_name") %>%
as.data.frame()
#creating the dendrogram
top_dend <- as.dendrogram(hclust(dist(kanye))) %>%
color_branches(k = 8) %>%
color_labels(k = 8)
#creating the dendrogram
top_dend <- as.dendrogram(hclust(dist(kanye))) %>%
color_branches(k = 8) %>%
color_labels(k = 8)
kanye <- kanye %>% select_if(is.numeric) %>%
bind_cols(kanye %>% select(track_name)) %>%
filter(!grepl('Skit', track_name)) %>%
filter(!grepl('Album Version', track_name)) %>%
filter(!grepl('[Live at]', track_name)) %>%
group_by(track_name) %>%
summarise_if(is.numeric, mean, na.rm = TRUE) %>%
ungroup() %>%
top_n(25, -valence) %>%
column_to_rownames("track_name") %>%
as.data.frame()
kanye <- get_artist_audio_features('Kanye West')
kanye <- kanye %>% select_if(is.numeric) %>%
bind_cols(kanye %>% select(track_name)) %>%
filter(!grepl('Skit', track_name)) %>%
filter(!grepl('Album Version', track_name)) %>%
filter(!grepl('[Live at]', track_name)) %>%
group_by(track_name) %>%
summarise_if(is.numeric, mean, na.rm = TRUE) %>%
ungroup() %>%
top_n(25, -valence) %>%
column_to_rownames("track_name") %>%
as.data.frame()
#creating the dendrogram
top_dend <- as.dendrogram(hclust(dist(kanye))) %>%
color_branches(k = 8) %>%
color_labels(k = 8)
kanye <- kanye %>% select_if(is.numeric) %>%
bind_cols(kanye %>% select(track_name)) %>%
filter(!grepl('Skit', track_name)) %>%
filter(!grepl('Album Version', track_name)) %>%
filter(!grepl('[Live at]', track_name)) %>%
group_by(track_name) %>%
summarise_if(is.numeric, mean, na.rm = TRUE) %>%
ungroup() %>%
top_n(20, -valence) %>%
column_to_rownames("track_name") %>%
as.data.frame()
kanye <- get_artist_audio_features('Kanye West')
kanye <- kanye %>% select_if(is.numeric) %>%
bind_cols(kanye %>% select(track_name)) %>%
filter(!grepl('Skit', track_name)) %>%
filter(!grepl('Album Version', track_name)) %>%
filter(!grepl('[Live at]', track_name)) %>%
group_by(track_name) %>%
summarise_if(is.numeric, mean, na.rm = TRUE) %>%
ungroup() %>%
top_n(20, -valence) %>%
column_to_rownames("track_name") %>%
as.data.frame()
#creating the dendrogram
top_dend <- as.dendrogram(hclust(dist(kanye))) %>%
color_branches(k = 8) %>%
color_labels(k = 8)
kanye <- get_artist_audio_features('Kanye West')
kanye <- kanye %>% select_if(is.numeric) %>%
bind_cols(kanye %>% select(track_name)) %>%
filter(!grepl('Skit', track_name)) %>%
filter(!grepl('Album Version', track_name)) %>%
filter(!grepl('Live at Abbey Road Studios', track_name)) %>%
group_by(track_name) %>%
summarise_if(is.numeric, mean, na.rm = TRUE) %>%
ungroup() %>%
top_n(20, -valence) %>%
column_to_rownames("track_name") %>%
as.data.frame()
#creating the dendrogram
top_dend <- as.dendrogram(hclust(dist(kanye))) %>%
color_branches(k = 8) %>%
color_labels(k = 8)
circlize_dendrogram(top_dend, labels_track_height = 0.3, dend_track_height = 0.3)
kanye <- get_artist_audio_features('Kanye West')
kanye <- kanye %>% select_if(is.numeric) %>%
bind_cols(kanye %>% select(track_name)) %>%
filter(!grepl('Skit', track_name)) %>%
filter(!grepl('Album Version', track_name)) %>%
filter(!grepl('Live at Abbey Road Studios', track_name)) %>%
group_by(track_name) %>%
summarise_if(is.numeric, mean, na.rm = TRUE) %>%
ungroup() %>%
top_n(25, -valence) %>%
column_to_rownames("track_name") %>%
as.data.frame()
#creating the dendrogram
top_dend <- as.dendrogram(hclust(dist(kanye))) %>%
color_branches(k = 9) %>%
color_labels(k = 9)
kanye <- get_artist_audio_features('Kanye West')
useless_features <- c("album_release_year", "disc_number", "track_number")
# Here is code to select the numerical variables in the data, bind the columns with names together, filter out skits,
# and other irregular song titles, finding the mean of the numerical values. After this, the track names are selected
# by the top 25 "saddest" songs (using the spotify data's Valence measure).
kanye <- kanye %>% select_if(is.numeric) %>%
select(, -one_of(useless_features)) %>%
bind_cols(kanye %>% select(track_name)) %>%
filter(!grepl('Skit', track_name)) %>%
filter(!grepl('Album Version', track_name)) %>%
filter(!grepl('Live at Abbey Road Studios', track_name)) %>%
group_by(track_name) %>%
summarise_if(is.numeric, mean, na.rm = TRUE) %>%
ungroup() %>%
top_n(25, -valence) %>%
column_to_rownames("track_name") %>%
as.data.frame()
#creating the dendrogram
top_dend <- as.dendrogram(hclust(dist(kanye))) %>%
color_branches(k = 9) %>%
color_labels(k = 9)
circlize_dendrogram(top_dend, labels_track_height = 0.3, dend_track_height = 0.3)
kanye <- get_artist_audio_features('Kanye West')
useless_features <- c("album_release_year", "disc_number", "track_number")
# Here is code to select the numerical variables in the data, bind the columns with names together, filter out skits,
# and other irregular song titles, finding the mean of the numerical values. After this, the track names are selected
# by the top 25 "saddest" songs (using the spotify data's Valence measure).
kanye <- kanye %>% select_if(is.numeric) %>%
select(-one_of(useless_features)) %>%
bind_cols(kanye %>% select(track_name)) %>%
filter(!grepl('Skit', track_name)) %>%
filter(!grepl('Album Version', track_name)) %>%
filter(!grepl('Live at Abbey Road Studios', track_name)) %>%
group_by(track_name) %>%
summarise_if(is.numeric, mean, na.rm = TRUE) %>%
ungroup() %>%
top_n(25, -valence) %>%
column_to_rownames("track_name") %>%
as.data.frame()
#creating the dendrogram
top_dend <- as.dendrogram(hclust(dist(kanye))) %>%
color_branches(k = 9) %>%
color_labels(k = 9)
circlize_dendrogram(top_dend, labels_track_height = 0.3, dend_track_height = 0.3)
kanye <- get_artist_audio_features('Kanye West')
useless_features <- c("album_release_year", "disc_number", "track_number")
# Here is code to select the numerical variables in the data, bind the columns with names together, filter out skits,
# and other irregular song titles, finding the mean of the numerical values. After this, the track names are selected
# by the top 25 "saddest" songs (using the spotify data's Valence measure).
kanye <- kanye %>% select_if(is.numeric) %>%
select(-one_of(useless_features)) %>%
bind_cols(kanye %>% select(track_name)) %>%
filter(!grepl('Skit', track_name)) %>%
filter(!grepl('Album Version', track_name)) %>%
filter(!grepl('Live At Abbey Road Studios', track_name)) %>%
group_by(track_name) %>%
summarise_if(is.numeric, mean, na.rm = TRUE) %>%
ungroup() %>%
top_n(25, -valence) %>%
column_to_rownames("track_name") %>%
as.data.frame()
#creating the dendrogram
top_dend <- as.dendrogram(hclust(dist(kanye))) %>%
color_branches(k = 9) %>%
color_labels(k = 9)
circlize_dendrogram(top_dend, labels_track_height = 0.3, dend_track_height = 0.3)
View(top_dend)
kanye <- get_artist_audio_features('Kanye West')
#Some of the features are not conducive to clustering and might skew the model.
useless_features <- c("album_release_year", "disc_number", "track_number", "time_signature")
# Here is code to select the numerical variables in the data, bind the columns with names together, filter out skits,
# and other irregular song titles, finding the mean of the numerical values.
kanye <- kanye %>% select_if(is.numeric) %>%
select(-one_of(useless_features)) %>%
bind_cols(kanye %>% select(track_name)) %>%
filter(!grepl('Skit', track_name)) %>%
filter(!grepl('Album Version', track_name)) %>%
filter(!grepl('Live At Abbey Road Studios', track_name)) %>%
group_by(track_name) %>%
summarise_if(is.numeric, mean, na.rm = TRUE) %>%
# After this, the track names are selected by the top 25 "saddest" songs (using the spotify data's Valence measure).
ungroup() %>%
top_n(25, -valence) %>%
column_to_rownames("track_name") %>%
as.data.frame()
#creating the dendrogram
top_dend <- as.dendrogram(hclust(dist(kanye))) %>%
color_branches(k = 9) %>%
color_labels(k = 9)
circlize_dendrogram(top_dend, labels_track_height = 0.3, dend_track_height = 0.3)
kanye <- get_artist_audio_features('Kanye West')
#Some of the features are not conducive to clustering and might skew the model.
useless_features <- c("album_release_year", "disc_number", "track_number", "time_signature")
# Here is code to select the numerical variables in the data, bind the columns with names together, filter out skits,
# and other irregular song titles, finding the mean of the numerical values.
kanye <- kanye %>% select_if(is.numeric) %>%
select(-one_of(useless_features)) %>%
bind_cols(kanye %>% select(track_name)) %>%
filter(!grepl('Skit', track_name)) %>%
filter(!grepl('Album Version', track_name)) %>%
filter(!grepl('Live At Abbey Road Studios', track_name)) %>%
group_by(track_name) %>%
summarise_if(is.numeric, mean, na.rm = TRUE) %>%
# After this, the track names are selected by the top 25 "saddest" songs (using the spotify data's Valence measure).
ungroup() %>%
top_n(25, valence) %>%
column_to_rownames("track_name") %>%
as.data.frame()
#creating the dendrogram
top_dend <- as.dendrogram(hclust(dist(kanye))) %>%
color_branches(k = 9) %>%
color_labels(k = 9)
circlize_dendrogram(top_dend, labels_track_height = 0.3, dend_track_height = 0.3)
kanye <- get_artist_audio_features('Kanye West')
#Some of the features are not conducive to clustering and might skew the model.
useless_features <- c("album_release_year", "disc_number", "track_number", "time_signature")
# Here is code to select the numerical variables in the data, bind the columns with names together, filter out skits,
# and other irregular song titles, finding the mean of the numerical values.
kanye <- kanye %>% select_if(is.numeric) %>%
select(-one_of(useless_features)) %>%
bind_cols(kanye %>% select(track_name)) %>%
filter(!grepl('Skit', track_name)) %>%
filter(!grepl('Album Version', track_name)) %>%
filter(!grepl('Live At Abbey Road Studios', track_name)) %>%
group_by(track_name) %>%
summarise_if(is.numeric, mean, na.rm = TRUE) %>%
# After this, the track names are selected by the top 25 "saddest" songs (using the spotify data's Valence measure).
ungroup() %>%
top_n(25, -valence) %>%
column_to_rownames("track_name") %>%
as.data.frame()
#creating the dendrogram
top_dend <- as.dendrogram(hclust(dist(kanye))) %>%
color_branches(k = 9) %>%
color_labels(k = 9)
circlize_dendrogram(top_dend, labels_track_height = 0.3, dend_track_height = 0.3)
hclust
?hclust
kanye <- get_artist_audio_features('Kanye West')
#Some of the features are not conducive to clustering and might skew the model.
useless_features <- c("album_release_year", "disc_number", "track_number", "time_signature")
# Here is code to select the numerical variables in the data, bind the columns with names together, filter out skits,
# and other irregular song titles, finding the mean of the numerical values.
kanye <- kanye %>% select_if(is.numeric) %>%
select(-one_of(useless_features)) %>%
bind_cols(kanye %>% select(track_name)) %>%
filter(!grepl('Skit', track_name)) %>%
filter(!grepl('Album Version', track_name)) %>%
filter(!grepl('Live At Abbey Road Studios', track_name)) %>%
group_by(track_name) %>%
summarise_if(is.numeric, mean, na.rm = TRUE) %>%
# After this, the track names are selected by the top 25 "saddest" songs (using the spotify data's Valence measure).
ungroup() %>%
top_n(25, -valence) %>%
column_to_rownames("track_name") %>%
as.data.frame()
#creating the dendrogram
top_dend <- as.dendrogram(hclust(dist(kanye))) %>%
color_branches(k = 8) %>%
color_labels(k = 8)
circlize_dendrogram(top_dend, labels_track_height = 0.3, dend_track_height = 0.3)
remotes::install_github('yihui/xaringan', upgrade = TRUE)
library(knitr)
knitr::opts_chunk$set(
eval = TRUE,
echo = FALSE
)
library("ISLR")
library("MASS")
data("Weekly")
knit_with_parameters('~/Documents/Graduate/First Year/Scientific Programming (R)/Project/Presentation1/Presentation_temp.Rmd')
install.packages('xaringan')
install.packages("xaringan")
options(htmltools.dir.version = FALSE, servr.interval = 1)
library(knitr)
opts_chunk$set(
fig.align="center", fig.width=6, fig.height=4.5,
out.width="748px", #out.length="520.75px",
dpi=300, #fig.path='Figs/',
cache=F#, echo=F, warning=F, message=F
)
knitr::opts_chunk$set(comment = NA, message = NA)
xaringan:::inf_mr()
xaringan:::inf_mr()
xaringan:::inf_mr()
xaringan:::inf_mr()
?fure
?fur
knit_with_parameters('~/Documents/GitHub/STA_3421_class_materials/ISL-Exercises/ISL-Ch4-Exercises_SP_2020/ISLR_Ch4-Exercises_SP_2020.Rmd')
pagedown::chrome_print("~/Documents/Github/Sta_3421_class_materials/ISL-Exercises/ISL-Ch4-Exercises_SP_2020/ISLR_Ch4-Exercises_SP_2020.html")
install.packages("pagedown")
install.packages("pagedown")
pagedown::chrome_print("~/Documents/Github/Sta_3421_class_materials/ISL-Exercises/ISL-Ch4-Exercises_SP_2020/ISLR_Ch4-Exercises_SP_2020.html")
pagedown::chrome_print("~/Documents/Github/Sta_3421_class_materials/ISL-Exercises/ISL-Ch4-Exercises_SP_2020/ISLR_Ch4-Exercises_SP_2020.html")
library(knitr)
knitr::opts_chunk$set(
eval = TRUE,
echo = FALSE
)
library(spotifyr)
Sys.setenv(SPOTIFY_CLIENT_ID = '42131626e81e4eaa99bcb59b9ec25ced')
Sys.setenv(SPOTIFY_CLIENT_SECRET = 'c4413145290a4e74b657e6691eb7ea3b')
access_token <- get_spotify_authorization_code()
pagedown::chrome_print(~/Documents/Graduate/First Year/Scientific Programming (R)/Project/Presentation1/Presentation_temp.pdf)
pagedown::chrome_print("~/Documents/Graduate/First Year/Scientific Programming (R)/Project/Presentation1/Presentation_temp.pdf"")
pagedown::chrome_print("~/Documents/Graduate/First Year/Scientific Programming (R)/Project/Presentation1/Presentation_temp.pdf")
pagedown::chrome_print("~/Documents/Graduate/First Year/Scientific Programming (R)/Project/Presentation1/Presentation_temp.pdf")
pagedown::chrome_print("~/Documents/Graduate/First Year/Scientific Programming (R)/Project/Presentation1/Presentation_temp.Rmd")
pagedown::chrome_print("~/Documents/Graduate/First Year/Scientific Programming (R)/Project/Presentation1/Presentation_temp.Rmd")
